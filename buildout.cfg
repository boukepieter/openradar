[buildout]
index = http://packages.lizardsystem.nl
prefer-final = true
socket-timeout = 1
show-picked-versions = true
extensions =
    mr.developer
parts =
    sysegg
    console_scripts
    omelette
    pyflakes
    sphinx
    supervisor
    test
develop = .
eggs =
    openradar
auto-checkout =
    radar


[versions]
# Specific pins
openradar =

# Reported by buildout-versions
alabaster = 0.7.3
amqp = 1.4.6
anyjson = 0.3.3
Babel = 1.3
billiard = 3.3.0.19
celery = 3.0.11
collective.recipe.omelette = 0.16
collective.recipe.sphinxbuilder = 0.8.2
collective.recipe.supervisor = 0.19
coverage = 3.7.1
docutils = 0.12
eazysvn = 1.13.0
Genshi = 0.7
gislib = 0.2.14
h5py = 2.3.1
httplib2 = 0.8
kombu = 3.0.24
meld3 = 1.0.2
mr.developer = 1.25
Paste = 1.7.5.1
PasteDeploy = 1.5.0
PasteScript = 1.7.5
pbp.recipe.noserunner = 0.2.6
pep8 = 1.6.2
Pillow = 2.7.0
Pydap = 3.1.RC1
pyflakes = 0.8.1
snowballstemmer = 1.2.0
Sphinx = 1.3.1
sphinx-rtd-theme = 0.1.7
SQLAlchemy = 0.8.1
supervisor = 3.1.3
syseggrecipe = 1.0.1
zc.buildout = 2.3.1
zc.recipe.egg = 2.0.1
zest.releaser = 3.56


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/nensskel.git
# lizard-ui = svn https://office.nelen-schuurmans.nl/svn/Products/djangoapps/lizard-ui/trunk
radar = git git@github.com:nens/radar.git


[sysegg]
# Add eggs here that are best handled through OS-level packages.
recipe = syseggrecipe
force-sysegg = true
eggs =
    matplotlib
    numpy
    pandas
    rpy2
    scipy


[test]
recipe = pbp.recipe.noserunner
eggs = openradar
defaults = openradar


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
    celery
# Development tools
    eazysvn
    coverage
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}

[supervisor]
recipe = collective.recipe.supervisor
programs =
    10 celery ${buildout:bin-directory}/celery [worker --app=openradar.tasks:app --concurrency=1 --maxtasksperchild=100]
